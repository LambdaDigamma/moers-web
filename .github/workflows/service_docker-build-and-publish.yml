on:
  workflow_call:
    inputs:
      platforms:
        type: string
        default: 'linux/amd64'
      docker-tags:
        required: true
        type: string
      dockerfile:
        type: string
        default: './Dockerfile'
      target:
        type: string
        default: ''
env:
  DOCKER_COMPOSE_CMD: docker compose -f docker-compose.yml -f docker-compose.ci.yml
jobs:
  docker-publish:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore composer cache (if available)
        id: composer-vendor-restore
        uses: actions/cache/restore@v4
        with:
          path: vendor/
          key: ${{ runner.os }}-composer-vendor-${{ hashFiles('composer.lock') }}
      - if: ${{ steps.composer-vendor-restore.outputs.cache-hit != 'true' }}
        name: List the composer packages
        continue-on-error: true
        run: |
          $DOCKER_COMPOSE_CMD \
          run \
          php \
          composer show --locked
      - if: ${{ steps.composer-vendor-restore.outputs.cache-hit != 'true' }}
        name: Install Composer dependencies
        run: |
          $DOCKER_COMPOSE_CMD \
          run \
          php \
          composer install --optimize-autoloader --no-interaction --no-progress --no-ansi
      - name: Set env file
        run: |
          echo $BASE_64_SECRET | base64 -d > .env
          chmod 600 .env
        env:
          BASE_64_SECRET: ${{ secrets.ENV_FILE_BASE64 }}
      - name: Restore node_modules cache (if available)
        id: node-modules-restore
        uses: actions/cache/restore@v4
        with:
          path: node_modules/
          key: ${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock') }}
      - if: ${{ steps.node-modules-restore.outputs.cache-hit != 'true' }}
        name: Run "yarn install"
        run: |
          $DOCKER_COMPOSE_CMD \
          run \
          node \
          yarn install --frozen-lockfile
      - name: Run "yarn build"
        run: |
          $DOCKER_COMPOSE_CMD \
          run \
          node \
          yarn build
      - if: ${{ steps.node-modules-restore.outputs.cache-hit != 'true' }}
        name: Upload node_modules cache
        uses: actions/cache/save@v4
        with:
          path: node_modules/
          key: ${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock') }}
      - name: docker-build-action
        uses: serversideup/github-action-docker-build@v5
        with:
          tags: "${{ inputs.docker-tags }}"
          dockerfile: "${{ inputs.dockerfile }}"
          registry: "ghcr.io"
          registry-username: "${{ github.actor }}"
          registry-token: "${{ secrets.GITHUB_TOKEN }}"
          platforms: "${{ inputs.platforms }}"
