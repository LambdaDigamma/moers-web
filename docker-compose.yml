version: "3.8"
services:

  caddy:
    image: caddy:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "5173:5173"
      - "443:443/udp"
    volumes:
      - $PWD/Caddyfile.dev:/etc/caddy/Caddyfile
      - $PWD/src:/srv/www
      - $PWD/caddy/data:/data
      - $PWD/caddy/config:/config
      - $PWD/caddy/log:/var/log
    depends_on:
      - app

  nginx:
    container_name: tfdoors-nginx
    build:
      context: .
      dockerfile: ./nginx.dockerfile
    command: sh -c "/usr/src/wait-for-it.sh app:9000 -t 30 && nginx -g \"daemon off;\""
    restart: unless-stopped
    ports:
      - "3000:80"
    volumes:
      - ./src:/usr/src
      - ./deployment/config/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app

  app:
    container_name: mein-moers-app
    build:
      args:
        user: meinmoers
        uid: 1000
        GITHUB_ACCESS_TOKEN: ${GITHUB_ACCESS_TOKEN}
        LF_GITHUB_ACCESS_TOKEN: ${LF_GITHUB_ACCESS_TOKEN}
        SPATIE_USERNAME: ${SPATIE_USERNAME}
        SPATIE_PASSWORD: ${SPATIE_PASSWORD}
      context: .
      dockerfile: ./src/Dockerfile
      target: api
    command: sh -c "./wait-for-it.sh mysql:3306 -t 30 && ./wait-for-it.sh redis:6379 -t 30 && php-fpm"
    restart: unless-stopped
    expose:
      - 9000
      - 5173
      - 443
    ports:
      - "9000:9000"
    volumes:
      - ./src:/usr/src
      - ./.env:/usr/src/.env
      - ./deployment/config/php-fpm/php-dev.ini:/usr/local/etc/php/conf.d/php.ini
    depends_on:
      - update
      - mysql
      - redis

  scheduler:
    build:
      args:
          user: tfdoors
          uid: 1000
          GITHUB_ACCESS_TOKEN: ${GITHUB_ACCESS_TOKEN}
          LF_GITHUB_ACCESS_TOKEN: ${LF_GITHUB_ACCESS_TOKEN}
          SPATIE_USERNAME: ${SPATIE_USERNAME}
          SPATIE_PASSWORD: ${SPATIE_PASSWORD}
      context: .
      dockerfile: ./src/Dockerfile
      target: scheduler
    command: sh -c "/usr/src/wait-for-it.sh mysql:3306 -t 30 && /usr/src/wait-for-it.sh redis:6379 -t 30 && /usr/src/scheduler.sh"
    restart: unless-stopped
    volumes:
      - ./src:/usr/src
      - ./.env:/usr/src/.env
    depends_on:
      - update
      - mysql
      - redis

  worker:
    build:
      args:
        user: tfdoors
        uid: 1000
        GITHUB_ACCESS_TOKEN: ${GITHUB_ACCESS_TOKEN}
        LF_GITHUB_ACCESS_TOKEN: ${LF_GITHUB_ACCESS_TOKEN}
        SPATIE_USERNAME: ${SPATIE_USERNAME}
        SPATIE_PASSWORD: ${SPATIE_PASSWORD}
      context: .
      dockerfile: ./src/Dockerfile
      target: worker
    command: sh -c "/usr/src/wait-for-it.sh mysql:3306 -t 30 && /usr/src/wait-for-it.sh redis:6379 -t 30 && /usr/src/worker.sh"
    restart: unless-stopped
    volumes:
      - ./src:/usr/src
      - ./.env:/usr/src/.env
    depends_on:
      - update
      - mysql
      - redis

  mysql:
    container_name: tfdoors-mysql
    build:
      args:
        password: ${DB_PASSWORD}
      context: .
      dockerfile: ./mysql.dockerfile
    restart: unless-stopped
    volumes:
      - ./mysqldata:/var/lib/mysql
    ports:
      - "33060:3306"
    environment:
      - MARIADB_DATABASE=${DB_DATABASE}
      - MARIADB_USER=${DB_USERNAME}
      - MARIADB_PASSWORD=${DB_PASSWORD}
      - MARIADB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}

  redis:
    container_name: tfdoors-redis
    image: redis:7.0.11-alpine
    restart: unless-stopped
    volumes:
      - ./redisdata:/data
    ports:
      - "63790:6379"

  update:
    container_name: tfdoors-update
    build:
      args:
        user: tfdoors
        uid: 1000
        GITHUB_ACCESS_TOKEN: ${GITHUB_ACCESS_TOKEN}
        SPATIE_USERNAME: ${SPATIE_USERNAME}
        SPATIE_PASSWORD: ${SPATIE_PASSWORD}
      context: .
      dockerfile: ./src/Dockerfile
    command: sh -c "./wait-for-it.sh mysql:3306 -t 30 && ./update.sh"
    restart: no
    volumes:
      - ./src/composer.json:/usr/src/composer.json
      - ./src/composer.lock:/usr/src/composer.lock
      - ./.env:/usr/src/.env
      - ./deployment/bin/update.sh:/usr/src/update.sh
    depends_on:
      - mysql

  # --------------------- mailhog ---------------------

  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    restart: always
    volumes:
      - ./data:/data
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATA_FILE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1

  # --------------------- phpmyadmin ---------------------

  phpmyadmin:
    image: phpmyadmin:latest
    restart: always
    environment:
      PMA_ABSOLUTE_URI: "https://phpmyadmin.24doors.localhost/"
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      UPLOAD_LIMIT: 10G
      MEMORY_LIMIT: 2G
      MAX_EXECUTION_TIME: 600
    depends_on:
      - mysql
